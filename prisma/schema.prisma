// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid()) @db.Uuid
  username     String
  email        String    @unique
  passwordHash String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  lastLogin    DateTime?

  summaries     Summary[]
  chatHistories ChatGPTHistory[]
}

model Summary {
  id        String   @id @default(uuid()) @db.Uuid
  userId    String   @db.Uuid
  title     String
  content   String
  summary   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user       User              @relation(fields: [userId], references: [id])
  tags       SummaryTag[]
  categories SummaryCategory[]
}

model Tag {
  id        String   @id @default(uuid()) @db.Uuid
  name      String   @unique
  createdAt DateTime @default(now())

  summaryTags SummaryTag[]
}

model SummaryTag {
  summaryId String   @db.Uuid
  tagId     String   @db.Uuid
  createdAt DateTime @default(now())

  summary Summary @relation(fields: [summaryId], references: [id])
  tag     Tag     @relation(fields: [tagId], references: [id])

  @@id([summaryId, tagId])
}

model Category {
  id        String   @id @default(uuid()) @db.Uuid
  name      String   @unique
  createdAt DateTime @default(now())

  summaryCategories SummaryCategory[]
}

model SummaryCategory {
  summaryId  String   @db.Uuid
  categoryId String   @db.Uuid
  createdAt  DateTime @default(now())

  summary  Summary  @relation(fields: [summaryId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])

  @@id([summaryId, categoryId])
}

model ChatGPTHistory {
  id        String   @id @default(uuid()) @db.Uuid
  userId    String   @db.Uuid
  title     String
  content   String
  summary   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}
